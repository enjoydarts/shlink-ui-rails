<div class="mb-6">
  <h1 class="text-3xl font-bold text-gray-900 mb-2">システム設定</h1>
  <p class="text-gray-600">システム全体の設定を管理できます</p>
</div>

<%= form_with url: admin_settings_path, method: :patch, local: true do |form| %>
  <div class="space-y-8">
    
    <!-- CAPTCHA設定 -->
    <% if @settings_by_category['captcha'] %>
      <div class="card p-6">
        <div class="flex justify-between items-center mb-4">
          <h2 class="text-xl font-bold text-gray-900">🛡️ CAPTCHA設定</h2>
          <div class="flex space-x-2">
            <button type="button" onclick="testSettings('captcha')" 
                    class="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-sm">
              テスト
            </button>
            <button type="button" onclick="resetCategory('captcha')"
                    class="bg-gray-500 hover:bg-gray-600 text-white px-3 py-1 rounded text-sm">
              リセット
            </button>
          </div>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">
              CAPTCHA機能
            </label>
            <% captcha_enabled = @settings_by_category['captcha']['captcha.enabled'] %>
            <%= form.select "settings[captcha.enabled]",
                options_for_select([
                  ['有効', 'true'],
                  ['無効', 'false']
                ], captcha_enabled&.typed_value.to_s),
                {},
                { class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" } %>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">
              Turnstile Site Key
            </label>
            <% site_key = @settings_by_category['captcha']['captcha.site_key'] %>
            <%= form.text_field "settings[captcha.site_key]", 
                value: site_key&.value,
                placeholder: "Cloudflare Turnstile Site Key",
                class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" %>
          </div>

          <div class="md:col-span-2">
            <label class="block text-sm font-medium text-gray-700 mb-1">
              Turnstile Secret Key
            </label>
            <% secret_key = @settings_by_category['captcha']['captcha.secret_key'] %>
            <%= form.password_field "settings[captcha.secret_key]", 
                value: secret_key&.value,
                placeholder: "Cloudflare Turnstile Secret Key",
                class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" %>
          </div>
        </div>
      </div>
    <% end %>

    <!-- レート制限設定 -->
    <% if @settings_by_category['rate_limit'] %>
      <div class="card p-6">
        <div class="flex justify-between items-center mb-4">
          <h2 class="text-xl font-bold text-gray-900">🚦 レート制限設定</h2>
          <button type="button" onclick="resetCategory('rate_limit')"
                  class="bg-gray-500 hover:bg-gray-600 text-white px-3 py-1 rounded text-sm">
            リセット
          </button>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">
              レート制限機能
            </label>
            <% rate_limit_enabled = @settings_by_category['rate_limit']['rate_limit.enabled'] %>
            <%= form.select "settings[rate_limit.enabled]",
                options_for_select([
                  ['有効', 'true'],
                  ['無効', 'false']
                ], rate_limit_enabled&.typed_value.to_s),
                {},
                { class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" } %>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">
              1分間あたりの最大リクエスト数
            </label>
            <% requests_per_minute = @settings_by_category['rate_limit']['rate_limit.requests_per_minute'] %>
            <%= form.number_field "settings[rate_limit.requests_per_minute]", 
                value: requests_per_minute&.typed_value,
                min: 1, max: 1000,
                class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" %>
          </div>
        </div>
      </div>
    <% end %>

    <!-- メール設定 -->
    <% if @settings_by_category['email'] %>
      <div class="card p-6">
        <div class="flex justify-between items-center mb-4">
          <h2 class="text-xl font-bold text-gray-900">📧 メール設定</h2>
          <div class="flex space-x-2">
            <button type="button" onclick="testSettings('email')" 
                    class="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-sm">
              接続テスト
            </button>
            <button type="button" onclick="resetCategory('email')"
                    class="bg-gray-500 hover:bg-gray-600 text-white px-3 py-1 rounded text-sm">
              リセット
            </button>
          </div>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">
              メール送信方法
            </label>
            <% email_adapter = @settings_by_category['email']['email.adapter'] %>
            <%= form.select "settings[email.adapter]",
                options_for_select([
                  ['SMTP', 'smtp'],
                  ['MailerSend', 'mailersend']
                ], email_adapter&.value),
                {},
                { class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" } %>
          </div>

          <div class="md:col-span-2">
            <label class="block text-sm font-medium text-gray-700 mb-1">
              SMTP設定 (JSON形式)
            </label>
            <% smtp_settings = @settings_by_category['email']['email.smtp_settings'] %>
            <%= form.text_area "settings[email.smtp_settings]", 
                value: smtp_settings&.value || '{}',
                rows: 4,
                placeholder: '{"address": "smtp.example.com", "port": 587, "user_name": "user", "password": "pass"}',
                class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 font-mono text-sm" %>
            <p class="text-xs text-gray-500 mt-1">
              JSON形式でSMTP設定を入力してください
            </p>
          </div>
        </div>
      </div>
    <% end %>

    <!-- パフォーマンス設定 -->
    <% if @settings_by_category['performance'] %>
      <div class="card p-6">
        <div class="flex justify-between items-center mb-4">
          <h2 class="text-xl font-bold text-gray-900">⚡ パフォーマンス設定</h2>
          <button type="button" onclick="resetCategory('performance')"
                  class="bg-gray-500 hover:bg-gray-600 text-white px-3 py-1 rounded text-sm">
            リセット
          </button>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">
              キャッシュ有効期間（秒）
            </label>
            <% cache_ttl = @settings_by_category['performance']['performance.cache_ttl'] %>
            <%= form.number_field "settings[performance.cache_ttl]", 
                value: cache_ttl&.typed_value,
                min: 60, max: 86400,
                class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" %>
            <p class="text-xs text-gray-500 mt-1">
              60秒〜24時間（86400秒）の範囲で設定
            </p>
          </div>
        </div>
      </div>
    <% end %>

  </div>

  <div class="mt-8 flex justify-end space-x-4">
    <button type="button" onclick="window.location.reload()" 
            class="bg-gray-500 hover:bg-gray-600 text-white px-6 py-2 rounded-md transition-colors duration-200">
      キャンセル
    </button>
    <%= form.submit "設定を保存", 
        class: "bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-md transition-colors duration-200" %>
  </div>
<% end %>

<!-- テスト結果表示エリア -->
<div id="test-result" class="hidden mt-4 p-4 rounded-md"></div>

<script>
function testSettings(type) {
  const button = event.target;
  const originalText = button.textContent;
  button.textContent = 'テスト中...';
  button.disabled = true;

  fetch(`<%= admin_settings_test_path %>`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
    },
    body: JSON.stringify({ test_type: type })
  })
  .then(response => response.json())
  .then(data => {
    const resultDiv = document.getElementById('test-result');
    resultDiv.className = data.success 
      ? 'mt-4 p-4 rounded-md bg-green-100 border border-green-400 text-green-700'
      : 'mt-4 p-4 rounded-md bg-red-100 border border-red-400 text-red-700';
    resultDiv.textContent = data.message;
    resultDiv.classList.remove('hidden');
    
    setTimeout(() => {
      resultDiv.classList.add('hidden');
    }, 5000);
  })
  .catch(error => {
    const resultDiv = document.getElementById('test-result');
    resultDiv.className = 'mt-4 p-4 rounded-md bg-red-100 border border-red-400 text-red-700';
    resultDiv.textContent = 'テスト実行中にエラーが発生しました';
    resultDiv.classList.remove('hidden');
  })
  .finally(() => {
    button.textContent = originalText;
    button.disabled = false;
  });
}

function resetCategory(category) {
  if (confirm(`${category}設定をデフォルト値にリセットしますか？`)) {
    fetch(`<%= admin_settings_reset_path %>`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      },
      body: JSON.stringify({ category: category })
    })
    .then(response => {
      if (response.ok) {
        window.location.reload();
      } else {
        alert('リセット中にエラーが発生しました');
      }
    })
    .catch(error => {
      alert('リセット中にエラーが発生しました');
    });
  }
}
</script>