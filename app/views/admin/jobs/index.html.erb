<div class="mb-6">
  <div class="flex justify-between items-center">
    <div>
      <h1 class="text-3xl font-bold text-gray-900 mb-2">ジョブ管理</h1>
      <p class="text-gray-600">バックグラウンドジョブの状態を確認・管理できます</p>
    </div>
  </div>
</div>

<!-- 統計カード -->
<div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
  <div class="card p-6">
    <div class="flex items-center">
      <div class="p-3 bg-red-100 rounded-full">
        <span class="text-xl">❌</span>
      </div>
      <div class="ml-4">
        <h3 class="text-lg font-semibold text-gray-900">失敗ジョブ</h3>
        <p class="text-2xl font-bold text-red-600"><%= @failed_jobs.total_count rescue @failed_jobs.size %></p>
      </div>
    </div>
  </div>

  <div class="card p-6">
    <div class="flex items-center">
      <div class="p-3 bg-yellow-100 rounded-full">
        <span class="text-xl">⏳</span>
      </div>
      <div class="ml-4">
        <h3 class="text-lg font-semibold text-gray-900">実行中</h3>
        <p class="text-2xl font-bold text-yellow-600"><%= @running_jobs.size %></p>
      </div>
    </div>
  </div>

  <div class="card p-6">
    <div class="flex items-center">
      <div class="p-3 bg-green-100 rounded-full">
        <span class="text-xl">✅</span>
      </div>
      <div class="ml-4">
        <h3 class="text-lg font-semibold text-gray-900">最近完了</h3>
        <p class="text-2xl font-bold text-green-600"><%= @recent_jobs.size %></p>
      </div>
    </div>
  </div>
</div>

<!-- 失敗したジョブ -->
<div class="card mb-8">
  <div class="px-6 py-4 border-b border-gray-200">
    <div class="flex justify-between items-center">
      <h2 class="text-xl font-bold text-gray-900">❌ 失敗したジョブ</h2>
      <div class="flex space-x-2">
        <% if @failed_jobs.any? %>
          <button onclick="confirmBatchRetry()"
                  class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm">
            すべて再実行
          </button>
          <button onclick="confirmBatchDelete()"
                  class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm">
            すべて削除
          </button>
        <% end %>
      </div>
    </div>
  </div>

  <% if @failed_jobs.any? %>
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              ジョブ種類
            </th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              キュー名
            </th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              エラー内容
            </th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              失敗日時
            </th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              アクション
            </th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% @failed_jobs.each do |failed_execution| %>
            <% job = failed_execution.job %>
            <tr class="hover:bg-gray-50">
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm font-medium text-gray-900">
                  <%= job&.class_name || '(削除済みジョブ)' %>
                </div>
                <div class="text-sm text-gray-500">
                  ID: <%= job&.id || 'N/A' %>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <%= job&.queue_name || 'N/A' %>
              </td>
              <td class="px-6 py-4">
                <div class="text-sm text-red-600 max-w-xs overflow-hidden">
                  <%= truncate(failed_execution.error.to_s, length: 100) %>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <%= failed_execution.created_at.strftime('%Y/%m/%d %H:%M') %>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                <div class="flex space-x-2">
                  <% if job %>
                    <button onclick="confirmJobRetry(<%= failed_execution.id %>, '<%= j(job.class_name) %>')"
                            class="text-blue-600 hover:text-blue-900">
                      再実行
                    </button>
                  <% end %>
                  <button onclick="confirmJobDeletion(<%= failed_execution.id %>, '<%= j(job&.class_name || '削除済みジョブ') %>')"
                          class="text-red-600 hover:text-red-900">
                    削除
                  </button>
                </div>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>

    <!-- ページネーション -->
    <% if @failed_jobs.respond_to?(:current_page) %>
      <div class="px-6 py-4 border-t border-gray-200">
        <%= paginate @failed_jobs %>
      </div>
    <% end %>
  <% else %>
    <div class="px-6 py-8 text-center">
      <p class="text-gray-500">現在失敗しているジョブはありません。</p>
    </div>
  <% end %>
</div>

<!-- 実行中のジョブ -->
<div class="card mb-8">
  <div class="px-6 py-4 border-b border-gray-200">
    <h2 class="text-xl font-bold text-gray-900">⏳ 実行中のジョブ</h2>
  </div>

  <% if @running_jobs.any? %>
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              ジョブ種類
            </th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              キュー名
            </th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              開始日時
            </th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              実行時間
            </th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% @running_jobs.each do |job| %>
            <% next unless job %>
            <tr class="hover:bg-gray-50">
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm font-medium text-gray-900">
                  <%= job.class_name %>
                </div>
                <div class="text-sm text-gray-500">
                  ID: <%= job.id %>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <%= job.queue_name %>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <%= job.created_at.strftime('%Y/%m/%d %H:%M') %>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <%= time_ago_in_words(job.created_at) %>前から
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  <% else %>
    <div class="px-6 py-8 text-center">
      <p class="text-gray-500">現在実行中のジョブはありません。</p>
    </div>
  <% end %>
</div>

<!-- 最近完了したジョブ -->
<div class="card">
  <div class="px-6 py-4 border-b border-gray-200">
    <h2 class="text-xl font-bold text-gray-900">✅ 最近完了したジョブ</h2>
  </div>

  <% if @recent_jobs.any? %>
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              ジョブ種類
            </th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              キュー名
            </th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              完了日時
            </th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              実行時間
            </th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% @recent_jobs.each do |job| %>
            <% next unless job %>
            <tr class="hover:bg-gray-50">
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm font-medium text-gray-900">
                  <%= job.class_name %>
                </div>
                <div class="text-sm text-gray-500">
                  ID: <%= job.id %>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <%= job.queue_name %>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <%= job.finished_at&.strftime('%Y/%m/%d %H:%M') %>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <% if job.finished_at && job.created_at %>
                  <%= distance_of_time_in_words(job.created_at, job.finished_at) %>
                <% else %>
                  -
                <% end %>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  <% else %>
    <div class="px-6 py-8 text-center">
      <p class="text-gray-500">最近完了したジョブはありません。</p>
    </div>
  <% end %>
</div>

<script>
// 個別ジョブ再実行の確認
function confirmJobRetry(jobId, jobName) {
  window.ConfirmationModal.show({
    title: 'ジョブの再実行',
    message: `ジョブ「${jobName}」を再実行しますか？`,
    confirmText: '再実行する',
    confirmClass: 'bg-blue-600 hover:bg-blue-700',
    onConfirm: () => {
      const form = document.createElement('form');
      form.method = 'POST';
      form.action = `/admin/jobs/${jobId}/retry`;
      
      const tokenInput = document.createElement('input');
      tokenInput.type = 'hidden';
      tokenInput.name = 'authenticity_token';
      tokenInput.value = document.querySelector('meta[name="csrf-token"]').content;
      
      form.appendChild(tokenInput);
      document.body.appendChild(form);
      form.submit();
    }
  });
}

// 個別ジョブ削除の確認
function confirmJobDeletion(jobId, jobName) {
  window.ConfirmationModal.show({
    title: 'ジョブの削除',
    message: `ジョブ「${jobName}」を削除しますか？この操作は取り消せません。`,
    confirmText: '削除する',
    confirmClass: 'bg-red-600 hover:bg-red-700',
    onConfirm: () => {
      const form = document.createElement('form');
      form.method = 'POST';
      form.action = `/admin/jobs/${jobId}`;
      
      const methodInput = document.createElement('input');
      methodInput.type = 'hidden';
      methodInput.name = '_method';
      methodInput.value = 'DELETE';
      
      const tokenInput = document.createElement('input');
      tokenInput.type = 'hidden';
      tokenInput.name = 'authenticity_token';
      tokenInput.value = document.querySelector('meta[name="csrf-token"]').content;
      
      form.appendChild(methodInput);
      form.appendChild(tokenInput);
      document.body.appendChild(form);
      form.submit();
    }
  });
}

// 一括再実行の確認
function confirmBatchRetry() {
  window.ConfirmationModal.show({
    title: 'すべてのジョブを再実行',
    message: 'すべての失敗ジョブを再実行しますか？',
    confirmText: 'すべて再実行する',
    confirmClass: 'bg-blue-600 hover:bg-blue-700',
    onConfirm: () => {
      const form = document.createElement('form');
      form.method = 'POST';
      form.action = '/admin/jobs/retry_all';
      
      const tokenInput = document.createElement('input');
      tokenInput.type = 'hidden';
      tokenInput.name = 'authenticity_token';
      tokenInput.value = document.querySelector('meta[name="csrf-token"]').content;
      
      form.appendChild(tokenInput);
      document.body.appendChild(form);
      form.submit();
    }
  });
}

// 一括削除の確認
function confirmBatchDelete() {
  window.ConfirmationModal.show({
    title: 'すべてのジョブを削除',
    message: 'すべての失敗ジョブを削除しますか？この操作は取り消せません。',
    confirmText: 'すべて削除する',
    confirmClass: 'bg-red-600 hover:bg-red-700',
    onConfirm: () => {
      const form = document.createElement('form');
      form.method = 'POST';
      form.action = '/admin/jobs/clear_all';
      
      const methodInput = document.createElement('input');
      methodInput.type = 'hidden';
      methodInput.name = '_method';
      methodInput.value = 'DELETE';
      
      const tokenInput = document.createElement('input');
      tokenInput.type = 'hidden';
      tokenInput.name = 'authenticity_token';
      tokenInput.value = document.querySelector('meta[name="csrf-token"]').content;
      
      form.appendChild(methodInput);
      form.appendChild(tokenInput);
      document.body.appendChild(form);
      form.submit();
    }
  });
}
</script>