name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: shlink_ui_rails_test
          MYSQL_USER: app
          MYSQL_PASSWORD: apppass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      RAILS_ENV: test
      DATABASE_HOST: 127.0.0.1
      DATABASE_NAME: shlink_ui_rails_test
      DATABASE_USER: app
      DATABASE_PASSWORD: apppass
      SHLINK_BASE_URL: https://test.example.com
      SHLINK_API_KEY: test-api-key
      SECRET_KEY_BASE: test-secret-key-base-for-ci
      RAILS_MASTER_KEY: test-master-key

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential default-libmysqlclient-dev git libyaml-dev pkg-config

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Setup database
        run: |
          echo "=== Creating database ==="
          RAILS_ENV=test bundle exec rails db:create
          echo "=== Applying schema with ridgepole ==="
          RAILS_ENV=test bundle exec ridgepole --config config/database.yml --env test --file db/schemas/Schemafile --apply
          echo "=== Verifying database setup ==="
          RAILS_ENV=test bundle exec rails runner "
            puts 'Database connection: OK'
            tables = ActiveRecord::Base.connection.tables
            puts \"Tables found: #{tables.count}\"
            puts \"Table list: #{tables.join(', ')}\" if tables.any?
            puts \"Users table exists: #{ActiveRecord::Base.connection.table_exists?('users')}\"
          "

      - name: Precompile assets
        run: bundle exec rails assets:precompile

      - name: Run RSpec tests
        run: |
          echo "=== Running RSpec tests ==="
          RAILS_ENV=test bundle exec rspec \
            --format progress \
            --format RspecJunitFormatter \
            --out tmp/rspec_results.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: rspec-results
          path: tmp/rspec_results.xml

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage
          path: coverage/
