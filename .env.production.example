# .env.production.example
# 本番環境用環境変数設定ファイルのテンプレート
#
# 使用方法:
# 1. このファイルを .env.production としてコピー
# 2. 各値を本番環境の値に置き換え
# 3. 権限を600に設定: chmod 600 .env.production

# =================================================================
# Rails基本設定
# =================================================================

# Rails環境（本番環境では必ずproduction）
RAILS_ENV=production

# 静的ファイルの配信設定（Caddyを使用するためtrue）
RAILS_SERVE_STATIC_FILES=true

# ログを標準出力に出力（Docker環境ではtrue）
RAILS_LOG_TO_STDOUT=true

# ログレベル設定（debug, info, warn, error）
LOG_LEVEL=info

# =================================================================
# セキュリティ設定
# =================================================================

# 秘密キー（本番では必ず強力なランダム文字列に変更）
# 生成方法: bin/rails secret
SECRET_KEY_BASE=your-secret-key-base-here-change-this-to-random-string

# Devise用秘密キー（本番では必ず強力なランダム文字列に変更）
# 生成方法: bin/rails secret
DEVISE_SECRET_KEY=your-devise-secret-key-here-change-this-to-random-string

# HTTPS強制設定（本番では必ずtrue）
SECURITY_FORCE_SSL=true

# セキュリティヘッダー有効化（本番では必ずtrue）
SECURITY_HEADERS_ENABLED=true

# セッションタイムアウト（秒単位、デフォルト: 7200秒 = 2時間）
SECURITY_SESSION_TIMEOUT=7200

# =================================================================
# データベース設定（MySQL）
# =================================================================

# マネージドMySQLの接続情報
# 形式: mysql2://username:password@hostname:port/database_name
DATABASE_URL=mysql2://username:password@mysql-host.example.com:3306/shlink_ui_rails_production

# データベース接続プール設定
PERFORMANCE_DATABASE_POOL_SIZE=10

# =================================================================
# Redis設定（Upstash）
# =================================================================

# Upstash Redisの接続URL
# 形式: rediss://default:password@hostname:port
REDIS_URL=rediss://default:your-redis-password@redis-host.upstash.io:6380

# Redis接続設定
REDIS_TIMEOUT=5
REDIS_POOL_SIZE=5
REDIS_POOL_TIMEOUT=5

# =================================================================
# Google OAuth2認証設定
# =================================================================

# Google Cloud ConsoleのOAuth2設定から取得
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

# =================================================================
# メール送信設定（MailerSend）
# =================================================================

# MailerSendのAPIトークン
MAILERSEND_API_TOKEN=your-mailersend-api-token

# 送信者メールアドレス
MAIL_FROM=noreply@your-domain.com

# メール送信者表示名
MAIL_FROM_NAME=Your App Name

# =================================================================
# Shlink API設定
# =================================================================

# ShlinkサーバーのAPIエンドポイント
SHLINK_BASE_URL=https://your-shlink-server.com

# Shlink API認証キー
SHLINK_API_KEY=your-shlink-api-key

# API通信タイムアウト（秒）
SHLINK_TIMEOUT=30

# API通信失敗時のリトライ回数
SHLINK_RETRY_ATTEMPTS=3

# =================================================================
# WebAuthn設定（FIDO2/セキュリティキー認証）
# =================================================================

# Relying Party名（サービス名）
WEBAUTHN_RP_NAME=Your App Name

# Relying Party ID（ドメイン名）
WEBAUTHN_RP_ID=your-domain.com

# Origin URL（完全なURL）
WEBAUTHN_ORIGIN=https://your-domain.com

# サポートする暗号化アルゴリズム（カンマ区切り）
WEBAUTHN_ALGORITHMS=ES256,PS256,RS256

# WebAuthnタイムアウト（ミリ秒）
WEBAUTHN_TIMEOUT=60000

# =================================================================
# アプリケーション設定
# =================================================================

# ホスト名設定
APP_HOST=your-domain.com

# プロトコル設定
APP_PROTOCOL=https

# タイムゾーン設定
APP_TIMEZONE=Tokyo

# ページネーション設定
APP_PAGINATION_PER_PAGE=20
APP_PAGINATION_MAX_PER_PAGE=100

# URL短縮設定
APP_SHORT_URL_MAX_TAGS=10
APP_SHORT_URL_MAX_TAG_LENGTH=20
APP_SHORT_URL_MIN_SLUG_LENGTH=3

# =================================================================
# パフォーマンス設定
# =================================================================

# キャッシュ有効期限（秒）
PERFORMANCE_CACHE_TTL=3600

# バックグラウンドジョブのスレッド数
PERFORMANCE_BACKGROUND_JOB_THREADS=5

# =================================================================
# CAPTCHA設定（オプション）
# =================================================================

# Cloudflare Turnstile設定（使用する場合）
# TURNSTILE_SITE_KEY=your-turnstile-site-key
# TURNSTILE_SECRET_KEY=your-turnstile-secret-key

# =================================================================
# レート制限設定
# =================================================================

# レート制限有効化（通常はtrue）
RATE_LIMIT_ENABLED=true

# 一般的なリクエストのレート制限（リクエスト数/分）
RATE_LIMIT_GENERAL=100

# ログイン試行のレート制限（リクエスト数/分）
RATE_LIMIT_LOGIN=5

# API呼び出しのレート制限（リクエスト数/分）
RATE_LIMIT_API=60

# =================================================================
# ブラウザサポート設定
# =================================================================

# 各ブラウザの最小サポートバージョン
BROWSER_SUPPORT_SAFARI=12+
BROWSER_SUPPORT_CHROME=70+
BROWSER_SUPPORT_FIREFOX=70+
BROWSER_SUPPORT_EDGE=79+
BROWSER_SUPPORT_OPERA=57+

# =================================================================
# その他の設定
# =================================================================

# 本番環境では以下は自動設定されるため環境変数での設定は不要:
# - DEBUG設定 (開発環境のみ)
# - MAINTENANCE_MODE (SystemSettingで管理)
# - MONITORING設定 (未実装またはデフォルトで有効)

# =================================================================
# 注意事項
# =================================================================
#
# 1. セキュリティ:
#    - SECRET_KEY_BASE と DEVISE_SECRET_KEY は必ず変更してください
#    - データベース接続情報は適切に保護してください
#    - このファイルの権限は600に設定してください
#
# 2. パフォーマンス:
#    - DATABASE_POOL_SIZE はサーバーのリソースに応じて調整してください
#    - BACKGROUND_JOB_THREADS は CPU コア数に応じて調整してください
#
# 3. 設定管理:
#    - いくつかの設定はSystemSetting（データベース）で管理されます
#    - 本番環境では開発環境固有の設定は自動的に無効化されます
#    - 監視・ログ設定は本番環境では自動的に有効化されます
#
# 4. バックアップ:
#    - 設定変更前には必ずバックアップを取得してください