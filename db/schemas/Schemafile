# frozen_string_literal: true

create_table "users", force: :cascade do |t|
  # Database authenticatable
  t.string "email", default: "", null: false
  t.string "encrypted_password", default: "", null: false

  # Recoverable
  t.string "reset_password_token"
  t.datetime "reset_password_sent_at"

  # Rememberable
  t.datetime "remember_created_at"

  # Confirmable
  t.string "confirmation_token"
  t.datetime "confirmed_at"
  t.datetime "confirmation_sent_at"
  t.string "unconfirmed_email"

  # Trackable (enabled for security)
  t.integer "sign_in_count", default: 0, null: false
  t.datetime "current_sign_in_at"
  t.datetime "last_sign_in_at"
  t.string "current_sign_in_ip"
  t.string "last_sign_in_ip"

  # Lockable
  t.integer "failed_attempts", default: 0, null: false
  t.string "unlock_token"
  t.datetime "locked_at"

  # OAuth provider information
  t.string "provider"
  t.string "uid"
  t.string "name"

  # User role (normal_user, admin)
  t.string "role", default: "normal_user", null: false

  # Two-Factor Authentication (TOTP)
  t.string "otp_secret_key"                            # TOTP秘密鍵（暗号化）
  t.boolean "otp_required_for_login", default: false   # TOTP有効フラグ
  t.datetime "otp_backup_codes_generated_at"           # バックアップコード生成日時
  t.text "otp_backup_codes"                            # バックアップコード（暗号化・JSON）

  # WebAuthn (FIDO2) Authentication
  t.binary "webauthn_user_id"                          # WebAuthn用ユーザーID

  # Counter cache for short_urls association
  t.integer "short_urls_count", default: 0, null: false

  # Theme preference (light, dark, system)
  t.string "theme_preference", default: "system", null: false

  t.timestamps null: false
end

add_index "users", [ "email" ], name: "index_users_on_email", unique: true
add_index "users", [ "reset_password_token" ], name: "index_users_on_reset_password_token", unique: true
add_index "users", [ "confirmation_token" ], name: "index_users_on_confirmation_token", unique: true
add_index "users", [ "unlock_token" ], name: "index_users_on_unlock_token", unique: true
add_index "users", [ "provider", "uid" ], name: "index_users_on_provider_and_uid", unique: true
add_index "users", [ "role" ], name: "index_users_on_role"
add_index "users", [ "theme_preference" ], name: "index_users_on_theme_preference"

create_table "short_urls", force: :cascade do |t|
  # Shlink API response data
  t.string "short_code", null: false
  t.string "short_url", null: false
  t.text "long_url", null: false
  t.string "domain"
  t.string "title"
  t.text "tags", comment: "JSON array of tags"
  t.text "meta", comment: "JSON metadata"

  # Visit statistics
  t.integer "visit_count", default: 0, null: false

  # Date controls
  t.datetime "valid_since"
  t.datetime "valid_until"

  # Visit limits
  t.integer "max_visits"

  # Crawlability
  t.boolean "crawlable", default: true, null: false

  # Forward query parameters
  t.boolean "forward_query", default: true, null: false

  # Device-specific redirect rules
  t.text "redirect_rules", comment: "JSON array of device redirect rules"

  # User association
  t.references :user, null: false, foreign_key: true

  # Soft delete support
  t.datetime "deleted_at"

  # Timestamps
  t.datetime "date_created", null: false
  t.timestamps null: false
end

add_index "short_urls", [ "short_code" ], name: "index_short_urls_on_short_code", unique: true
add_index "short_urls", [ "user_id", "date_created" ], name: "index_short_urls_on_user_id_and_date_created"
add_index "short_urls", [ "deleted_at" ], name: "index_short_urls_on_deleted_at"

create_table "webauthn_credentials", force: :cascade do |t|
  # 認証器の固有識別子
  t.string "external_id", null: false

  # 公開鍵（Base64エンコード）
  t.text "public_key", null: false

  # サインカウンター（リプレイ攻撃防止）
  t.bigint "sign_count", default: 0, null: false

  # ユーザー設定のニックネーム
  t.string "nickname", null: false

  # 最後に使用された日時
  t.datetime "last_used_at"

  # アクティブ状態
  t.boolean "active", default: true, null: false

  # ユーザーとの関連
  t.references :user, null: false, foreign_key: true

  # タイムスタンプ
  t.timestamps null: false
end

add_index "webauthn_credentials", [ "external_id" ], name: "index_webauthn_credentials_on_external_id", unique: true
add_index "webauthn_credentials", [ "user_id", "nickname" ], name: "index_webauthn_credentials_on_user_id_and_nickname", unique: true
add_index "webauthn_credentials", [ "user_id", "active" ], name: "index_webauthn_credentials_on_user_id_and_active"

create_table "system_settings", force: :cascade do |t|
  # 設定キー（一意）
  t.string "key_name", null: false

  # 設定値（JSON対応のため TEXT型を使用）
  t.text "value"

  # 設定の説明
  t.text "description"

  # 設定値のデータ型（string, integer, boolean, json等）
  t.string "setting_type", default: "string", null: false

  # 設定カテゴリ（captcha, rate_limit, email等）
  t.string "category"

  # 設定が有効かどうか
  t.boolean "enabled", default: true, null: false

  # タイムスタンプ
  t.timestamps null: false
end

add_index "system_settings", [ "key_name" ], name: "index_system_settings_on_key_name", unique: true
add_index "system_settings", [ "category" ], name: "index_system_settings_on_category"
add_index "system_settings", [ "enabled" ], name: "index_system_settings_on_enabled"

# SolidQueue tables for background job processing
create_table "solid_queue_jobs", force: :cascade do |t|
  t.string "queue_name", null: false
  t.string "class_name", null: false
  t.text "arguments"
  t.integer "priority", default: 0, null: false
  t.string "active_job_id"
  t.datetime "scheduled_at"
  t.datetime "finished_at"
  t.string "concurrency_key"
  t.datetime "created_at", null: false
  t.datetime "updated_at", null: false
end

add_index "solid_queue_jobs", [ "queue_name", "finished_at" ], name: "index_solid_queue_jobs_for_filtering"
add_index "solid_queue_jobs", [ "scheduled_at" ], name: "index_solid_queue_jobs_on_scheduled_at"
add_index "solid_queue_jobs", [ "active_job_id" ], name: "index_solid_queue_jobs_on_active_job_id"
add_index "solid_queue_jobs", [ "class_name" ], name: "index_solid_queue_jobs_on_class_name"
add_index "solid_queue_jobs", [ "finished_at" ], name: "index_solid_queue_jobs_on_finished_at"
add_index "solid_queue_jobs", [ "concurrency_key", "priority", "created_at" ], name: "index_solid_queue_jobs_for_alerting"

create_table "solid_queue_scheduled_executions", force: :cascade do |t|
  t.bigint "job_id", null: false
  t.string "queue_name", null: false
  t.integer "priority", default: 0, null: false
  t.datetime "scheduled_at", null: false
  t.datetime "created_at", null: false
end

add_index "solid_queue_scheduled_executions", [ "scheduled_at", "priority", "job_id" ], name: "index_solid_queue_scheduled_executions_for_polling"

create_table "solid_queue_ready_executions", force: :cascade do |t|
  t.bigint "job_id", null: false
  t.string "queue_name", null: false
  t.integer "priority", default: 0, null: false
  t.datetime "created_at", null: false
end

add_index "solid_queue_ready_executions", [ "priority", "job_id" ], name: "index_solid_queue_ready_executions_for_polling"

create_table "solid_queue_claimed_executions", force: :cascade do |t|
  t.bigint "job_id", null: false
  t.string "process_id"
  t.datetime "created_at", null: false
end

add_index "solid_queue_claimed_executions", [ "process_id", "job_id" ], name: "index_solid_queue_claimed_executions_on_process_id_and_job_id"

create_table "solid_queue_blocked_executions", force: :cascade do |t|
  t.bigint "job_id", null: false
  t.string "queue_name", null: false
  t.integer "priority", default: 0, null: false
  t.string "concurrency_key", null: false
  t.datetime "expires_at", null: false
  t.datetime "created_at", null: false
end

add_index "solid_queue_blocked_executions", [ "expires_at", "concurrency_key" ], name: "index_solid_queue_blocked_executions_for_maintenance"
add_index "solid_queue_blocked_executions", [ "concurrency_key", "priority", "job_id" ], name: "index_solid_queue_blocked_executions_for_polling"

create_table "solid_queue_failed_executions", force: :cascade do |t|
  t.bigint "job_id", null: false
  t.text "error"
  t.datetime "created_at", null: false
end

add_index "solid_queue_failed_executions", [ "job_id" ], name: "index_solid_queue_failed_executions_on_job_id", unique: true

create_table "solid_queue_paused_queues", force: :cascade do |t|
  t.string "queue_name", null: false
  t.datetime "created_at", null: false
end

add_index "solid_queue_paused_queues", [ "queue_name" ], name: "index_solid_queue_paused_queues_on_queue_name", unique: true

create_table "solid_queue_pauses", force: :cascade do |t|
  t.string "queue_name", null: false
  t.datetime "created_at", null: false
end

add_index "solid_queue_pauses", [ "queue_name" ], name: "index_solid_queue_pauses_on_queue_name", unique: true

create_table "solid_queue_processes", force: :cascade do |t|
  t.string "kind", null: false
  t.datetime "last_heartbeat_at", null: false
  t.bigint "supervisor_id"
  t.integer "pid", null: false
  t.string "hostname"
  t.text "metadata"
  t.string "name"
  t.datetime "created_at", null: false
end

add_index "solid_queue_processes", [ "last_heartbeat_at" ], name: "index_solid_queue_processes_on_last_heartbeat_at"
add_index "solid_queue_processes", [ "supervisor_id" ], name: "index_solid_queue_processes_on_supervisor_id"

create_table "solid_queue_recurring_tasks", force: :cascade do |t|
  t.string "key", null: false
  t.string "schedule", null: false
  t.string "command", limit: 2048
  t.string "class_name"
  t.text "arguments"
  t.string "queue_name"
  t.integer "priority", default: 0
  t.boolean "static", default: true, null: false
  t.text "description"
  t.datetime "created_at", null: false
  t.datetime "updated_at", null: false
end

add_index "solid_queue_recurring_tasks", [ "static" ], name: "index_solid_queue_recurring_tasks_on_static"
add_index "solid_queue_recurring_tasks", [ "key" ], name: "index_solid_queue_recurring_tasks_on_key", unique: true

create_table "solid_queue_semaphores", force: :cascade do |t|
  t.string "key", null: false
  t.integer "value", default: 1, null: false
  t.datetime "expires_at", null: false
  t.datetime "created_at", null: false
  t.datetime "updated_at", null: false
end

add_index "solid_queue_semaphores", [ "expires_at" ], name: "index_solid_queue_semaphores_on_expires_at"
add_index "solid_queue_semaphores", [ "key", "value" ], name: "index_solid_queue_semaphores_on_key_and_value"
add_index "solid_queue_semaphores", [ "key" ], name: "index_solid_queue_semaphores_on_key", unique: true
